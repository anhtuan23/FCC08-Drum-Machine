{"version":3,"sources":["sound-info.js","App.js","serviceWorker.js","index.js"],"names":["sfx","Q","name","src","W","E","A","S","D","Z","X","C","App","react_default","a","createElement","id","App_DrumMachine","React","Component","DrumMachine","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","key","handlePadClick","bind","assertThisInitialized","setState","App_DrumContainer","App_Controller","soundName","DrumContainer","App_DrumPad","keyName","DrumPad","_this2","playSound","handleKeyPress","document","addEventListener","e","keyCode","charCodeAt","getElementById","concat","click","audio","currentTime","play","element","parentNode","style","backgroundColor","setTimeout","className","onClick","Controller","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4c20c42.chunk.js","sourcesContent":["export const sfx = {\r\n    Q: {\r\n        name: 'clap',\r\n        src: 'https://raw.githubusercontent.com/anhtuan23/FCC08-Drum-Machine/master/public/sound-effect/clap-808.wav'\r\n    },\r\n    W: {\r\n        name: 'cowbell',\r\n        src: 'https://raw.githubusercontent.com/anhtuan23/FCC08-Drum-Machine/master/public/sound-effect/cowbell-808.wav'\r\n    },\r\n    E: {\r\n        name: 'crash',\r\n        src: 'https://raw.githubusercontent.com/anhtuan23/FCC08-Drum-Machine/master/public/sound-effect/crash-808.wav'\r\n    },\r\n    A: {\r\n        name: 'hihat',\r\n        src: 'https://raw.githubusercontent.com/anhtuan23/FCC08-Drum-Machine/master/public/sound-effect/hihat-808.wav'\r\n    },\r\n    S: {\r\n        name: 'kick',\r\n        src: 'https://raw.githubusercontent.com/anhtuan23/FCC08-Drum-Machine/master/public/sound-effect/kick-808.wav'\r\n    },\r\n    D: {\r\n        name: 'openhat',\r\n        src: 'https://raw.githubusercontent.com/anhtuan23/FCC08-Drum-Machine/master/public/sound-effect/openhat-808.wav'\r\n    },\r\n    Z: {\r\n        name: 'perc',\r\n        src: 'https://raw.githubusercontent.com/anhtuan23/FCC08-Drum-Machine/master/public/sound-effect/perc-808.wav'\r\n    },\r\n    X: {\r\n        name: 'ride',\r\n        src: 'https://raw.githubusercontent.com/anhtuan23/FCC08-Drum-Machine/master/public/sound-effect/ride-acoustic01.wav'\r\n    },\r\n    C: {\r\n        name: 'shaker',\r\n        src: 'https://raw.githubusercontent.com/anhtuan23/FCC08-Drum-Machine/master/public/sound-effect/shaker-analog.wav'\r\n    },\r\n};","import React from 'react';\nimport './App.scss';\nimport { sfx } from './sound-info.js';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div id=\"app\">\n        <DrumMachine />\n      </div>\n    );\n  }\n}\n\nclass DrumMachine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: '',\n      name: ''\n    }\n    this.handlePadClick = this.handlePadClick.bind(this);\n  }\n\n  handlePadClick(key) {\n    this.setState(\n      {\n        key,\n        name: sfx[key].name\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"drum-machine\">\n        <DrumContainer handlePadClick={this.handlePadClick} sfx={sfx} />\n        <Controller soundName={this.state.name} />\n      </div>\n    );\n  }\n}\n\nclass DrumContainer extends React.Component {\n\n  render() {\n    return (\n      <div id=\"drum-container\">\n        <DrumPad keyName={'Q'} handlePadClick={this.props.handlePadClick} src={this.props.sfx.Q.src} />\n        <DrumPad keyName={'W'} handlePadClick={this.props.handlePadClick} src={this.props.sfx.W.src} />\n        <DrumPad keyName={'E'} handlePadClick={this.props.handlePadClick} src={this.props.sfx.E.src} />\n        <DrumPad keyName={'A'} handlePadClick={this.props.handlePadClick} src={this.props.sfx.A.src} />\n        <DrumPad keyName={'S'} handlePadClick={this.props.handlePadClick} src={this.props.sfx.S.src} />\n        <DrumPad keyName={'D'} handlePadClick={this.props.handlePadClick} src={this.props.sfx.D.src} />\n        <DrumPad keyName={'Z'} handlePadClick={this.props.handlePadClick} src={this.props.sfx.Z.src} />\n        <DrumPad keyName={'X'} handlePadClick={this.props.handlePadClick} src={this.props.sfx.X.src} />\n        <DrumPad keyName={'C'} handlePadClick={this.props.handlePadClick} src={this.props.sfx.C.src} />\n      </div>\n    );\n  }\n}\n\nclass DrumPad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.playSound = this.playSound.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  handleKeyPress(e) {\n    if (e.keyCode === this.props.keyName.charCodeAt(0)) {\n      const element = document.getElementById(`drum-pad-${this.props.keyName}`);\n      element.click();\n    }\n  }\n\n  playSound() {\n    const audio = document.getElementById(this.props.keyName);\n    audio.click();\n    audio.currentTime = 0;\n    audio.play();\n\n    //make click effect\n    const element = audio.parentNode;\n    element.style.backgroundColor = \"#6e788d\";\n    setTimeout(() => {\n      element.style.backgroundColor = \"#474e5c\";\n    }, 100);\n\n    this.props.handlePadClick(this.props.keyName);\n  }\n\n  render() {\n    return (\n      <div className=\"drum-pad\" id={`drum-pad-${this.props.keyName}`} onClick={this.playSound}>\n        {this.props.keyName}\n        <audio src={this.props.src} className=\"clip\" id={this.props.keyName} />\n      </div>\n\n    )\n  }\n}\n\nclass Controller extends React.Component {\n  render() {\n    return (\n      <div id=\"display\">\n        {this.props.soundName}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}